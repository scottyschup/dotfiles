#!/usr/bin/env ruby -w

########
# MVP1 #
########

# $ ps aux
# USER               PID  %CPU %MEM      VSZ    RSS   TT  STAT STARTED      TIME COMMAND
# sschup15          1601   9.9  1.6  3034556 266768   ??  R    Thu01PM   7:48.34 /Applications/iTerm.app/Contents/MacOS/iTerm2 -psn_0_36873
# _windowserver      164   2.5  0.4  4011980  67448   ??  Ss   Thu01PM  43:59.84 /System/Library/PrivateFrameworks/SkyLight.framework/Resources/WindowServer -d
# sschup15         12269   1.7  3.5  4066648 589220   ??  S    Thu04PM  28:52.27 /Applications/Google Chrome.app/Contents/MacOS/Google Chrome
# root               254   1.2  2.6  3190324 437688   ??  Ss   Thu01PM  15:06.11 /Library/Bitdefender/AVP/BDLDaemon
# root               342   1.0  0.1  2485928  15208   ??  Ss   Thu01PM  48:49.71 sysmond
# sschup15         55607   0.7  2.3  3960736 387880   ??  S     2:54PM   8:23.28 /Applications/Spotify.app/Contents/Frameworks/Spotify Helper.app/Contents/MacO

verbose = ARGV.any? { |arg| arg == "-v" }
ARGV.delete "-v" if verbose

if ARGV.length.zero?
  $stdout.puts "Specify the search term to use to filter processes."
  exit
elsif ARGV.length > 1
  $stdout.puts "Only one search term to filter processes allowed."
  exit
elsif ARGV[0].include?("grep")
  $stdout.puts "Can't filter `grep` commands."
  exit
end

arg = ARGV.shift
res = `ps aux | grep "#{arg}"`.split("\n")

# Array mapping:
# 0     1    2     3     4    5    6   7     8        9     10
# USER  PID  %CPU  %MEM  VSZ  RSS  TT  STAT  STARTED  TIME  COMMAND

res.shift # Remove column headers
res.map! do |ps_line|
  next if ps_line.include?("grep")

  arr = ps_line.split(/\s+/)
  user = arr[0]
  pid = arr[1]
  arr.shift(10)
  command = arr.first
  full_command = arr.join(" ")
  res_arr = [user, pid, command]
  res_arr << full_command if verbose
  res_arr.join("\t")
end.compact!
$stdout.puts res
