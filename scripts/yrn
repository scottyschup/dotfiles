#!/usr/bin/env ruby -w

args = ARGV.join(" ") if ARGV.length >= 1
args.gsub!("run dev", "run dev || yarn run develop || yarn run start") if args&.include?("run dev")

############################
# Check node compatibility #
############################
child = Thread.new do
  Thread.current[:res] = `yarn 2>&1`.split("\n")
end

# Thread used to timeout `yarn` command after N seconds (meaning no node incompatibility)
timeout = Thread.new do
  sleep 10
end

##################
# Finger spinner #
##################
i = 0
fpi = 250_000
curr_pos = 0
# positions = [
#   ["", "\t\t\tðŸ‘‡", "\t\t  \t ", "\t\t\t "],
#   ["", "\t\t\t ", "\t\t\t\tðŸ‘ˆ", "\t\t\t "],
#   ["", "\t\t\t ", "\t\t\t\t ", "\t\t\tðŸ‘†"],
#   ["", "\t\t\t ", "\t\tðŸ‘‰\t ", "\t\t\t "]
# ]

positions = ["ðŸ‘‰", "ðŸ‘‡", "ðŸ‘ˆ", "ðŸ‘†"]

while child.status && timeout.status
  if (i % fpi).zero?
    $stdout.print "\rChecking node compatibility "
    $stdout.print positions[curr_pos]
    curr_pos = (curr_pos + 1) % 4
  end
  i += 1
end

# Once one of the threads finishes, make sure both are stopped
child.kill if child.status
timeout.kill if timeout.status
$stdout.puts

###########################################
# See if node version needs to be changed #
###########################################
switch = nil
install = nil
expected_major_version = nil
cmd = "yarn #{(' && (yarn ' + args + ')') if args}"

child[:res]&.first(10)&.each do |line|
  next unless line&.include? 'The engine "node" is incompatible with this module. Expected version'

  switch = true
  _, versions = line.split('Expected version "')
  # expected_version, actual_version = versions.gsub(/[a-zA-Z\^"]|\.\s/, '').split(' ')
  expected_version, actual_version = versions.split('". Got "')
  expected_major_version = expected_version.split.last.split('.').first.gsub(/[a-zA-Z\^<>=]*/, '')

  system "clear"
  $stdout.puts "Expected: #{expected_version}; Actual: #{actual_version}"
  break
end

if switch
  $stdout.puts "Checking that required node version is installed: v#{expected_major_version}"
  switch_cmd = ". /usr/local/opt/nvm/nvm.sh && nvm use #{expected_major_version}"
  res = `#{switch_cmd} 2>&1`
  install = res.include?("is not yet installed")
  if install
    $stdout.puts "Installing node v#{expected_major_version}"
    system ". /usr/local/opt/nvm/nvm.sh && nvm install #{expected_major_version}"
  end
end

#############
# Run `yarn #
#############
$stdout.puts "Switching to node v#{expected_major_version}" if switch && expected_major_version
$stdout.puts "Running #{cmd}"
system("#{(switch_cmd + ' && ') if switch} #{cmd}") || puts(child[:res])
