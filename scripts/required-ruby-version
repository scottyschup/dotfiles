#!/usr/bin/env ruby -w

################
# Dependencies #
################
begin
  verbose = $VERBOSE
  $VERBOSE = nil # Suppress deprecation warnings and the like

  require 'faraday'
  # require 'optparse'
  require_relative '../lib/rb/cli_utils.rb'
  # add more requires here
rescue LoadError => err
  # Error example:
  #   pry(main)> require 'fake_gem/with/path'
  #   LoadError: cannot load such file -- fake-gem/with/path
  #   from /Users/username/.rbenv/versions/2.4.7/lib/ruby/2.4.0/rubygems/core_ext/kernel_require.rb:55:in `require'
  dependency = err.message.split(' -- ').last
  # Remove '/with/path' from the gem name; noop for all others
  dependency = dependency.split('/').first
  warn "Missing dependency: #{dependency}"
  warn 'Make sure the following command completes successfully before using this script.'
  warn "\tgem install #{dependency}"
  exit 1
ensure
  $VERBOSE = verbose
end

#############
# Ruby code #
#############

def curl_ruby_gems(gem_name)
  resp = Faraday.get "https://rubygems.org/api/v1/versions/#{gem_name}.json"
  # $stdout.puts JSON.parse(resp.body).first
  JSON.parse(resp.body).reverse.map do |info|
    $stdout.puts("#{gem_name} v: #{info['number']}, Ruby v: #{info['ruby_version']}")
  end
end

################
# Shell script #
################
if $PROGRAM_NAME == __FILE__
  # options = {}
  # OptionParser.new do |opts|
  #   opts.on('-v', '--verbose', 'More loquacious') do
  #     options[:verbose] = true
  #   end

  #   # opts.on('-oVAL', '--option-with-value=VAL', 'Option with value message') do |val|
  #   #   options[:value] = val
  #   # end

  #   opts.on_tail('-h', '--help', 'Show this help message') do
  #     puts opts
  #     exit
  #   end
  # end.parse!

  if ARGV.empty?
    warn 'Usage: required-ruby-version GEM_NAME'
    exit 1
  end

  # Call the Ruby code
  curl_ruby_gems ARGV.first
end
